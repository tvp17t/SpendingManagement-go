package app

// Code generated by dart2go-skeleton (quick pass). DO NOT EDIT BY HAND.
// Original file: lib/firebase_options.dart
// Notes:
// - This is a structural skeleton to help migrate from Dart to Go while *keeping directory layout*.
// - Original Dart source is embedded below in comments for reference.
// - Replace TODOs with real implementations.
// - Consider organizing packages and moving UI-specific code out; Flutter UI has no direct Go equivalent.

/*
----- BEGIN ORIGINAL DART CODE -----
// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDAu-vLGoFQfz9p52UEMv9JPqRTYrgaZaA',
    appId: '1:872853118639:web:8ef70441291e0b8abf3e5a',
    messagingSenderId: '872853118639',
    projectId: 'spending-management-c955a',
    authDomain: 'spending-management-c955a.firebaseapp.com',
    storageBucket: 'spending-management-c955a.appspot.com',
    measurementId: 'G-048LET1D62',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDRJKEc47u4Vu39SBJLRSjmItnZH3mrGzU',
    appId: '1:872853118639:android:b20670b942765deabf3e5a',
    messagingSenderId: '872853118639',
    projectId: 'spending-management-c955a',
    storageBucket: 'spending-management-c955a.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAfA-M9OJpRHZQ_k2SdX-JR_bedORPcKQI',
    appId: '1:872853118639:ios:29bce0c09c12eb4ebf3e5a',
    messagingSenderId: '872853118639',
    projectId: 'spending-management-c955a',
    storageBucket: 'spending-management-c955a.appspot.com',
    iosClientId: '872853118639-mjt0vcq0nq37obrm9p31pb07ugdv51m5.apps.googleusercontent.com',
    iosBundleId: 'com.example.spendingManagement',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyAfA-M9OJpRHZQ_k2SdX-JR_bedORPcKQI',
    appId: '1:872853118639:ios:29bce0c09c12eb4ebf3e5a',
    messagingSenderId: '872853118639',
    projectId: 'spending-management-c955a',
    storageBucket: 'spending-management-c955a.appspot.com',
    iosClientId: '872853118639-mjt0vcq0nq37obrm9p31pb07ugdv51m5.apps.googleusercontent.com',
    iosBundleId: 'com.example.spendingManagement',
  );
}

----- END ORIGINAL DART CODE -----
*/

// === AUTO-GENERATED SKELETONS ===
type DefaultFirebaseOptions struct {
	// TODO: add fields translated from Dart
}

