package localization

// Code generated by dart2go-skeleton (quick pass). DO NOT EDIT BY HAND.
// Original file: lib/setting/localization/app_localizations_setup.dart
// Notes:
// - This is a structural skeleton to help migrate from Dart to Go while *keeping directory layout*.
// - Original Dart source is embedded below in comments for reference.
// - Replace TODOs with real implementations.
// - Consider organizing packages and moving UI-specific code out; Flutter UI has no direct Go equivalent.

/*
----- BEGIN ORIGINAL DART CODE -----
import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:spending_management/setting/localization/app_localizations.dart';

class AppLocalizationsSetup {
  static const Iterable<Locale> supportedLocales = [
    Locale('en'),
    Locale('vi'),
  ];

  static const Iterable<LocalizationsDelegate<dynamic>> localizationsDelegates =
      [
    AppLocalizations.delegate,
    GlobalMaterialLocalizations.delegate,
    GlobalWidgetsLocalizations.delegate,
    GlobalCupertinoLocalizations.delegate,
  ];

  static Locale localeResolutionCallback(
      Locale? locale, Iterable<Locale> supportedLocales) {
    for (Locale supportedLocale in supportedLocales) {
      if (supportedLocale.languageCode == locale!.languageCode &&
          supportedLocale.countryCode == locale.countryCode) {
        return supportedLocale;
      }
    }
    return supportedLocales.first;
  }
}

----- END ORIGINAL DART CODE -----
*/

// === AUTO-GENERATED SKELETONS ===
type AppLocalizationsSetup struct {
	// TODO: add fields translated from Dart
}

