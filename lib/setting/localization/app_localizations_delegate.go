package localization

// Code generated by dart2go-skeleton (quick pass). DO NOT EDIT BY HAND.
// Original file: lib/setting/localization/app_localizations_delegate.dart
// Notes:
// - This is a structural skeleton to help migrate from Dart to Go while *keeping directory layout*.
// - Original Dart source is embedded below in comments for reference.
// - Replace TODOs with real implementations.
// - Consider organizing packages and moving UI-specific code out; Flutter UI has no direct Go equivalent.

/*
----- BEGIN ORIGINAL DART CODE -----
import 'package:flutter/material.dart' show Locale, LocalizationsDelegate;
import 'package:spending_management/setting/localization/app_localizations.dart';

class AppLocalizationsDelegate extends LocalizationsDelegate<AppLocalizations> {
  const AppLocalizationsDelegate();

  @override
  bool isSupported(Locale locale) {
    return ['en', 'vi'].contains(locale.languageCode);
  }

  @override
  Future<AppLocalizations> load(Locale locale) async {
    AppLocalizations appLocalizations = AppLocalizations(locale);
    await appLocalizations.load();
    return appLocalizations;
  }

  @override
  bool shouldReload(LocalizationsDelegate<AppLocalizations> old) => false;
}

----- END ORIGINAL DART CODE -----
*/

// === AUTO-GENERATED SKELETONS ===
type AppLocalizationsDelegate struct {
	// TODO: add fields translated from Dart
}

